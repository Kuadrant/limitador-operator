name: Build and Publish Images For Tag Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-?**"
env:
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  IMG_REGISTRY_REPO: limitador-operator
  OPERATOR_NAME: limitador-operator

jobs:
  build:
    name: Build and Push image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/${{ env.OPERATOR_NAME }}
          flavor: |
            latest=false
          tags: |
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
      - name: Read release string version
        id: release
        run: |
          version=`make read-release-version`
          echo version=$version >> $GITHUB_OUTPUT
      - name: Print tags
        run: echo "Git reference name = ${{ github.ref_name }}, release version = ${{ steps.release.outputs.version }}"
      - name: Verify git reference name matches the release version
        if: ${{ github.ref_name != steps.release.outputs.version }}
        run: exit 1
      - name: Build and Push Image
        if: github.repository_owner == 'kuadrant'
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            QUAY_IMAGE_EXPIRY=${{ inputs.quayImageExpiry }}
            GIT_SHA=${{ github.sha }}
            DIRTY=false
            VERSION=${{ github.ref_name }}
      - name: Print Image URL
        run: |
          echo "Image(s) pushed:"
          echo "${{ steps.meta.outputs.tags }}"
  build-bundle:
    name: Build and Push bundle image
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.bundle-meta.outputs.tags }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Install yq tool
        run: |
          # following sub-shells running make target should have yq already installed
          make yq
      - name: Read operator image reference URL from the manifest bundle
        id: parsed-operator-image
        run: |
          url=`make bundle-operator-image-url`
          echo url=$url >> $GITHUB_OUTPUT
      - name: Print tags and references
        run: echo "Operator image tag = ${{ needs.build.outputs.image }}, Reference in bundle = ${{ steps.parsed-operator-image.outputs.url }}"
      - name: Verify referenced operator image tag matches the tag currently being built
        if: ${{ needs.build.outputs.image != steps.parsed-operator-image.outputs.url }}
        run: exit 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Extract bundle metadata
        id: bundle-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/${{ env.OPERATOR_NAME }}-bundle
          flavor: |
            latest=false
          tags: |
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
      - name: Build and Push Bundle Image
        if: github.repository_owner == 'kuadrant'
        id: build-bundle-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./bundle.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.bundle-meta.outputs.tags }}
          build-args: QUAY_IMAGE_EXPIRY=${{ inputs.quayImageExpiry }}
      - name: Print Bundle Image URL
        run: |
          echo "Bundle image(s) pushed:"
          echo "${{ steps.bundle-meta.outputs.tags }}"
  build-catalog:
    name: Build and Push catalog image
    needs: [build, build-bundle]
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.catalog-meta.outputs.tags }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Install yq tool
        run: |
          # following sub-shells running make target should have yq already installed
          make yq
      - name: Read operator bundle image reference
        id: parsed-operator-bundle
        run: |
          image=`make print-bundle-image`
          echo image=$image >> $GITHUB_OUTPUT
      - name: Print tags and references
        run: echo "Operator bundle image tag = ${{ needs.build-bundle.outputs.image }}, Reference in catalog = ${{ steps.parsed-operator-bundle.outputs.image }}"
      - name: Verify referenced bundle tag matches the bundle tag currently being built
        if: ${{ needs.build-bundle.outputs.image != steps.parsed-operator-bundle.outputs.image }}
        run: exit 1
      - name: Generate Catalog Content
        run: make catalog DEFAULT_CHANNEL=stable
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Extract catalog metadata
        id: catalog-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/${{ env.OPERATOR_NAME }}-catalog
          flavor: |
            latest=false
          tags: |
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
      - name: Build and Push Catalog Image
        if: github.repository_owner == 'kuadrant'
        id: build-catalog-image
        uses: docker/build-push-action@v5
        with:
          context: ./catalog
          file: ./catalog/${{ env.OPERATOR_NAME }}-catalog.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.catalog-meta.outputs.tags }}
          # The Quay image expiry label for the generated catalog Dockerfile is set via opm, using the value set in the QUAY_IMAGE_EXPIRY environment variable
      - name: Print Catalog Image URL
        run: |
          echo "Catalog image(s) pushed:"
          echo "${{ steps.catalog-meta.outputs.tags }}"
