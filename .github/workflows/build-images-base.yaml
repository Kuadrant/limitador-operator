name: Build Images

on:
  workflow_call:
    inputs:
      operatorVersion:
        description: Operator bundle version
        default: 0.0.0
        type: string
      operatorTag:
        description: Operator tag
        default: latest
        type: string
      limitadorVersion:
        description: Limitador version
        default: latest
        type: string
      channels:
        description: Bundle and catalog channels, comma separated
        default: preview
        type: string
      defaultChannel:
        description: Bundle default channel
        default: preview
        type: string
      quayImageExpiry:
        description: When to expire the built quay images. The time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively, from the time the image is built.
        default: never
        type: string
  workflow_dispatch:
    inputs:
      operatorVersion:
        description: Operator bundle version
        default: 0.0.0
        type: string
      operatorTag:
        description: Operator tag
        default: latest
        type: string
      limitadorVersion:
        description: Limitador version
        default: latest
        type: string
      channels:
        description: Bundle and catalog channels, comma separated
        default: preview
        type: string
      defaultChannel:
        description: Bundle default channel
        default: preview
        type: string
      quayImageExpiry:
        description: When to expire the built quay images. The time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively, from the time the image is built.
        default: never
        type: string

env:
  IMG_TAGS: ${{ inputs.operatorTag }}
  VERSION: ${{ inputs.operatorVersion }}
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  MAIN_BRANCH_NAME: main
  OPERATOR_NAME: limitador-operator
  QUAY_IMAGE_EXPIRY: ${{ inputs.quayImageExpiry }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/${{ env.OPERATOR_NAME }}
          tags: |
            type=raw,value=${{ env.IMG_TAGS }}
            type=raw,value=${{ github.sha }},enable={{is_default_branch}}
      - name: Build and Push Image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            QUAY_IMAGE_EXPIRY=${{ inputs.quayImageExpiry }}
            GIT_SHA=${{ github.sha }}
            DIRTY=false
            VERSION=${{ inputs.operatorVersion }}
      - name: Print Image URL
        run: |
          echo "Image(s) pushed:"
          echo "${{ steps.meta.outputs.tags }}"

  build-bundle:
    needs: build
    name: Build Bundle
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
        id: go
      - name: Run make bundle
        id: make-bundle
        run: |
          make bundle \
            REGISTRY=${{ env.IMG_REGISTRY_HOST }} \
            ORG=${{ env.IMG_REGISTRY_ORG }} \
            VERSION=${{ env.VERSION }} \
            IMAGE_TAG=${{ inputs.operatorTag }} \
            LIMITADOR_VERSION=${{ inputs.limitadorVersion }} \
            DEFAULT_CHANNEL=${{ inputs.defaultChannel }} \
            CHANNELS=${{ inputs.channels }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Extract bundle metadata
        id: bundle-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/${{ env.OPERATOR_NAME }}-bundle
          tags: |
            type=raw,value=${{ env.IMG_TAGS }}
            type=raw,value=${{ github.sha }},enable={{is_default_branch}}
      - name: Build and Push Bundle Image
        id: build-bundle-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./bundle.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.bundle-meta.outputs.tags }}
          build-args: QUAY_IMAGE_EXPIRY=${{ inputs.quayImageExpiry }}
      - name: Print Bundle Image URL
        run: |
          echo "Bundle image(s) pushed:"
          echo "${{ steps.bundle-meta.outputs.tags }}"

  build-catalog:
    name: Build Catalog
    needs: [build, build-bundle]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
        id: go
      - name: Generate Catalog Content
        run: |
          make catalog \
            REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} \
            VERSION=${{ env.VERSION }} IMAGE_TAG=${{ inputs.operatorTag }} \
            LIMITADOR_VERSION=${{ inputs.limitadorVersion }} \
            DEFAULT_CHANNEL=${{ inputs.defaultChannel }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Extract catalog metadata
        id: catalog-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/${{ env.OPERATOR_NAME }}-catalog
          tags: |
            type=raw,value=${{ env.IMG_TAGS }}
            type=raw,value=${{ github.sha }},enable={{is_default_branch}}
      - name: Build and Push Catalog Image
        id: build-catalog-image
        uses: docker/build-push-action@v5
        with:
          context: ./catalog
          file: ./catalog/${{ env.OPERATOR_NAME }}-catalog.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.catalog-meta.outputs.tags }}
          # The Quay image expiry label for the generated catalog Dockerfile is set via opm, using the value set in the QUAY_IMAGE_EXPIRY environment variable
      - name: Print Catalog Image URL
        run: |
          echo "Catalog image(s) pushed:"
          echo "${{ steps.catalog-meta.outputs.tags }}"
